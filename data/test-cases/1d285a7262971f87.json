{"uid":"1d285a7262971f87","name":"test_create_pet_with_only_required_fields","fullName":"tests.api.test_create_pet.TestCreatePet#test_create_pet_with_only_required_fields","historyId":"8c3e75626b21143ba9fb6787a90a6258","time":{"start":1759063605354,"stop":1759063605378,"duration":24},"description":"Verify that a pet with only mandatory fields is successfully created.","descriptionHtml":"<p>Verify that a pet with only mandatory fields is successfully created.</p>\n","status":"failed","statusMessage":"AssertionError: Expected 200, got 500","statusTrace":"self = <test_create_pet.TestCreatePet object at 0x7f71028c5690>\nsession = <requests.sessions.Session object at 0x7f710270e890>\npet_url = 'https://petstore3.swagger.io/api/v3/pet'\npet_required_fields_only = {'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/']}\n\n    @allure.description(\"Verify that a pet with only mandatory fields is successfully created.\")\n    def test_create_pet_with_only_required_fields(self, session, pet_url, pet_required_fields_only):\n        response = post_with_allure(session, pet_url, pet_required_fields_only)\n>       assert_pet_response_matches_expected(response, pet_required_fields_only)\n\ntests/api/test_create_pet.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>\nvalid_pet_full = {'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/']}\n\n    def assert_pet_response_matches_expected(response, valid_pet_full):\n        with allure.step(\"Assert pet created successfully\"):\n>           assert response.status_code == 200, \\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                f\"Expected 200, got {response.status_code}\"\nE           AssertionError: Expected 200, got 500\n\nhelpers/assertion_helper.py:11: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1759063605088,"stop":1759063605088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1759063605088,"stop":1759063605088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759063605088,"stop":1759063605088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1759063605088,"stop":1759063605088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1759063605088,"stop":1759063605088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_url","time":{"start":1759063605089,"stop":1759063605089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"allure_environment","time":{"start":1759063605089,"stop":1759063605089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session","time":{"start":1759063605089,"stop":1759063605089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_required_fields_only","time":{"start":1759063605353,"stop":1759063605353,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify that a pet with only mandatory fields is successfully created.","status":"failed","statusMessage":"AssertionError: Expected 200, got 500","statusTrace":"self = <test_create_pet.TestCreatePet object at 0x7f71028c5690>\nsession = <requests.sessions.Session object at 0x7f710270e890>\npet_url = 'https://petstore3.swagger.io/api/v3/pet'\npet_required_fields_only = {'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/']}\n\n    @allure.description(\"Verify that a pet with only mandatory fields is successfully created.\")\n    def test_create_pet_with_only_required_fields(self, session, pet_url, pet_required_fields_only):\n        response = post_with_allure(session, pet_url, pet_required_fields_only)\n>       assert_pet_response_matches_expected(response, pet_required_fields_only)\n\ntests/api/test_create_pet.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>\nvalid_pet_full = {'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/']}\n\n    def assert_pet_response_matches_expected(response, valid_pet_full):\n        with allure.step(\"Assert pet created successfully\"):\n>           assert response.status_code == 200, \\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                f\"Expected 200, got {response.status_code}\"\nE           AssertionError: Expected 200, got 500\n\nhelpers/assertion_helper.py:11: AssertionError","steps":[{"name":"POST /api/v3/pet","time":{"start":1759063605354,"stop":1759063605378,"duration":24},"status":"passed","steps":[],"attachments":[{"uid":"ee8455565a0c3ca1","name":"Request","source":"ee8455565a0c3ca1.json","type":"application/json","size":353},{"uid":"7526675029928aef","name":"Response","source":"7526675029928aef.json","type":"application/json","size":605}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Assert pet created successfully","time":{"start":1759063605378,"stop":1759063605378,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected 200, got 500\n","statusTrace":"  File \"/home/runner/work/python-testing-lab/python-testing-lab/helpers/assertion_helper.py\", line 11, in assert_pet_response_matches_expected\n    assert response.status_code == 200, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"Create Pet"},{"name":"feature","value":"Pet API"},{"name":"tag","value":"pet_create"},{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_create_pet"},{"name":"subSuite","value":"TestCreatePet"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2109-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_create_pet"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["pet_create"]},"source":"1d285a7262971f87.json","parameterValues":[]}