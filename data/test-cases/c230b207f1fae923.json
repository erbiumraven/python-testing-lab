{"uid":"c230b207f1fae923","name":"test_find_pets_multiple_status","fullName":"tests.api.test_pet_status.TestFindPetByStatus#test_find_pets_multiple_status","historyId":"4779a460b39667c551130be2940acb2e","time":{"start":1759063284086,"stop":1759063284092,"duration":6},"description":"Find pets by multiple valid statuses returns pets for each status.","descriptionHtml":"<p>Find pets by multiple valid statuses returns pets for each status.</p>\n","status":"failed","statusMessage":"AssertionError: Expected 200, got 400","statusTrace":"self = <test_pet_status.TestFindPetByStatus object at 0x7fa945adc1d0>\nsession = <requests.sessions.Session object at 0x7fa9459109d0>\npet_status_url = 'https://petstore3.swagger.io/api/v3/pet/findByStatus'\nall_statuses_pets = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 676740, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...940844, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    @allure.description(\"Find pets by multiple valid statuses returns pets for each status.\")\n    def test_find_pets_multiple_status(self, session, pet_status_url, all_statuses_pets):\n        statuses = {pet[\"status\"] for pet in all_statuses_pets}\n        param = \",\".join(statuses)\n        url = f\"{pet_status_url}?status={param}\"\n        response = get_with_allure(session, url)\n>       assert_pets_status_success(response, statuses, all_statuses_pets)\n\ntests/api/test_pet_status.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, status_set = {'available', 'pending', 'sold'}\ntest_pet_list = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 676740, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...940844, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    def assert_pets_status_success(response, status_set, test_pet_list):\n        with (allure.step(f'Verify that pets with status in {status_set} (200)')):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           AssertionError: Expected 200, got 400\n\nhelpers/assertion_helper.py:82: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"session","time":{"start":1759063283641,"stop":1759063283642,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1759063283641,"stop":1759063283641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1759063283641,"stop":1759063283641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"allure_environment","time":{"start":1759063283641,"stop":1759063283641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1759063283641,"stop":1759063283641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop_policy","time":{"start":1759063283641,"stop":1759063283641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759063283641,"stop":1759063283641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_url","time":{"start":1759063283642,"stop":1759063283642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_status_url","time":{"start":1759063283989,"stop":1759063283989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"all_statuses_pets","time":{"start":1759063284069,"stop":1759063284086,"duration":17},"status":"passed","steps":[{"name":"POST /api/v3/pet","time":{"start":1759063284069,"stop":1759063284075,"duration":6},"status":"passed","steps":[],"attachments":[{"uid":"fcc4e0fd755de1ff","name":"Request","source":"fcc4e0fd755de1ff.json","type":"application/json","size":538},{"uid":"1f7c272c9ca54775","name":"Response","source":"1f7c272c9ca54775.json","type":"application/json","size":795}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"POST /api/v3/pet","time":{"start":1759063284075,"stop":1759063284080,"duration":5},"status":"passed","steps":[],"attachments":[{"uid":"b9cb2585d5bc2e0b","name":"Request","source":"b9cb2585d5bc2e0b.json","type":"application/json","size":536},{"uid":"baf6c6934d34fef9","name":"Response","source":"baf6c6934d34fef9.json","type":"application/json","size":793}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"POST /api/v3/pet","time":{"start":1759063284080,"stop":1759063284086,"duration":6},"status":"passed","steps":[],"attachments":[{"uid":"d2ec770aba09b37c","name":"Request","source":"d2ec770aba09b37c.json","type":"application/json","size":533},{"uid":"10c8f3ed124da4ee","name":"Response","source":"10c8f3ed124da4ee.json","type":"application/json","size":790}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Find pets by multiple valid statuses returns pets for each status.","status":"failed","statusMessage":"AssertionError: Expected 200, got 400","statusTrace":"self = <test_pet_status.TestFindPetByStatus object at 0x7fa945adc1d0>\nsession = <requests.sessions.Session object at 0x7fa9459109d0>\npet_status_url = 'https://petstore3.swagger.io/api/v3/pet/findByStatus'\nall_statuses_pets = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 676740, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...940844, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    @allure.description(\"Find pets by multiple valid statuses returns pets for each status.\")\n    def test_find_pets_multiple_status(self, session, pet_status_url, all_statuses_pets):\n        statuses = {pet[\"status\"] for pet in all_statuses_pets}\n        param = \",\".join(statuses)\n        url = f\"{pet_status_url}?status={param}\"\n        response = get_with_allure(session, url)\n>       assert_pets_status_success(response, statuses, all_statuses_pets)\n\ntests/api/test_pet_status.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, status_set = {'available', 'pending', 'sold'}\ntest_pet_list = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 676740, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...940844, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    def assert_pets_status_success(response, status_set, test_pet_list):\n        with (allure.step(f'Verify that pets with status in {status_set} (200)')):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           AssertionError: Expected 200, got 400\n\nhelpers/assertion_helper.py:82: AssertionError","steps":[{"name":"GET /api/v3/pet/findByStatus","time":{"start":1759063284086,"stop":1759063284092,"duration":6},"status":"passed","steps":[],"attachments":[{"uid":"d064f17606f084fb","name":"Request","source":"d064f17606f084fb.json","type":"application/json","size":211},{"uid":"11f8ace802b03dca","name":"Response","source":"11f8ace802b03dca.json","type":"application/json","size":647}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Verify that pets with status in {'sold', 'available', 'pending'} (200)","time":{"start":1759063284092,"stop":1759063284092,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected 200, got 400\n","statusTrace":"  File \"/home/runner/work/python-testing-lab/python-testing-lab/helpers/assertion_helper.py\", line 82, in assert_pets_status_success\n    assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"all_statuses_pets::0","time":{"start":1759063285335,"stop":1759063285351,"duration":16},"status":"passed","steps":[{"name":"DELETE /api/v3/pet/676740","time":{"start":1759063285335,"stop":1759063285340,"duration":5},"status":"passed","steps":[],"attachments":[{"uid":"611e1c67c0508e7b","name":"Request","source":"611e1c67c0508e7b.json","type":"application/json","size":211},{"uid":"ec7b0825d9925d15","name":"Response","source":"ec7b0825d9925d15.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"DELETE /api/v3/pet/311045","time":{"start":1759063285340,"stop":1759063285346,"duration":6},"status":"passed","steps":[],"attachments":[{"uid":"5ad7a9a9cc1d57a4","name":"Request","source":"5ad7a9a9cc1d57a4.json","type":"application/json","size":211},{"uid":"844ee30454b02088","name":"Response","source":"844ee30454b02088.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"DELETE /api/v3/pet/940844","time":{"start":1759063285346,"stop":1759063285351,"duration":5},"status":"passed","steps":[],"attachments":[{"uid":"eede105eee4ef9a5","name":"Request","source":"eede105eee4ef9a5.json","type":"application/json","size":211},{"uid":"70cdbf1e57ae56a8","name":"Response","source":"70cdbf1e57ae56a8.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Pet API"},{"name":"story","value":"Get Pet by Status"},{"name":"tag","value":"pet_status"},{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_pet_status"},{"name":"subSuite","value":"TestFindPetByStatus"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2103-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_pet_status"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["pet_status"]},"source":"c230b207f1fae923.json","parameterValues":[]}