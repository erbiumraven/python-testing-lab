{"uid":"f5a08e7420c782c8","name":"test_update_pet_success","fullName":"tests.api.test_update_pet.TestUpdatePet#test_update_pet_success","historyId":"8885184aa4eb06f012b9c4bd7e32b4a8","time":{"start":1759063830651,"stop":1759063830661,"duration":10},"description":"Update existing pet with new data and verify changes","descriptionHtml":"<p>Update existing pet with new data and verify changes</p>\n","status":"failed","statusMessage":"AssertionError: Expected 200, got 404","statusTrace":"self = <test_update_pet.TestUpdatePet object at 0x7fb8e6ee9390>\nsession = <requests.sessions.Session object at 0x7fb8e6d23210>\npet_url = 'https://petstore3.swagger.io/api/v3/pet'\ntest_pet = {'category': {'id': 2, 'name': 'Cats'}, 'id': 503533, 'name': 'Brown', 'photoUrls': ['https://pixabay.com/photos/cat12'], ...}\n\n    @allure.description(\"Update existing pet with new data and verify changes\")\n    def test_update_pet_success(self, session, pet_url, test_pet):\n        test_pet['name'] = \"Brown\"\n        test_pet['category'] = {\"id\": 2, \"name\": \"Cats\"}\n        test_pet['tags'] = [{\"id\": 0, \"name\": \"tag_b\"}]\n        test_pet['photoUrls'] = [\"https://pixabay.com/photos/cat12\"]\n        test_pet['status'] = \"pending\"\n    \n        put_response = put_with_allure(session, pet_url, test_pet)\n>       assert_pet_response_matches_expected(put_response, test_pet)\n\ntests/api/test_update_pet.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\nvalid_pet_full = {'category': {'id': 2, 'name': 'Cats'}, 'id': 503533, 'name': 'Brown', 'photoUrls': ['https://pixabay.com/photos/cat12'], ...}\n\n    def assert_pet_response_matches_expected(response, valid_pet_full):\n        with allure.step(\"Assert pet created successfully\"):\n>           assert response.status_code == 200, \\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                f\"Expected 200, got {response.status_code}\"\nE           AssertionError: Expected 200, got 404\n\nhelpers/assertion_helper.py:11: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1759063829838,"stop":1759063829838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop_policy","time":{"start":1759063829838,"stop":1759063829838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759063829838,"stop":1759063829839,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1759063829838,"stop":1759063829838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1759063829839,"stop":1759063829839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_url","time":{"start":1759063829839,"stop":1759063829839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"allure_environment","time":{"start":1759063829839,"stop":1759063829839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session","time":{"start":1759063829839,"stop":1759063829839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_pet","time":{"start":1759063830642,"stop":1759063830651,"duration":9},"status":"passed","steps":[{"name":"POST /api/v3/pet","time":{"start":1759063830642,"stop":1759063830651,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"6d593d3947834b16","name":"Request","source":"6d593d3947834b16.json","type":"application/json","size":538},{"uid":"b85a7d3b50ab6f99","name":"Response","source":"b85a7d3b50ab6f99.json","type":"application/json","size":795}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Update existing pet with new data and verify changes","status":"failed","statusMessage":"AssertionError: Expected 200, got 404","statusTrace":"self = <test_update_pet.TestUpdatePet object at 0x7fb8e6ee9390>\nsession = <requests.sessions.Session object at 0x7fb8e6d23210>\npet_url = 'https://petstore3.swagger.io/api/v3/pet'\ntest_pet = {'category': {'id': 2, 'name': 'Cats'}, 'id': 503533, 'name': 'Brown', 'photoUrls': ['https://pixabay.com/photos/cat12'], ...}\n\n    @allure.description(\"Update existing pet with new data and verify changes\")\n    def test_update_pet_success(self, session, pet_url, test_pet):\n        test_pet['name'] = \"Brown\"\n        test_pet['category'] = {\"id\": 2, \"name\": \"Cats\"}\n        test_pet['tags'] = [{\"id\": 0, \"name\": \"tag_b\"}]\n        test_pet['photoUrls'] = [\"https://pixabay.com/photos/cat12\"]\n        test_pet['status'] = \"pending\"\n    \n        put_response = put_with_allure(session, pet_url, test_pet)\n>       assert_pet_response_matches_expected(put_response, test_pet)\n\ntests/api/test_update_pet.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\nvalid_pet_full = {'category': {'id': 2, 'name': 'Cats'}, 'id': 503533, 'name': 'Brown', 'photoUrls': ['https://pixabay.com/photos/cat12'], ...}\n\n    def assert_pet_response_matches_expected(response, valid_pet_full):\n        with allure.step(\"Assert pet created successfully\"):\n>           assert response.status_code == 200, \\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                f\"Expected 200, got {response.status_code}\"\nE           AssertionError: Expected 200, got 404\n\nhelpers/assertion_helper.py:11: AssertionError","steps":[{"name":"PUT /api/v3/pet","time":{"start":1759063830651,"stop":1759063830661,"duration":10},"status":"passed","steps":[],"attachments":[{"uid":"4c1fd7fc0a4d2f44","name":"Request","source":"4c1fd7fc0a4d2f44.json","type":"application/json","size":497},{"uid":"40b0c980a50b6b04","name":"Response","source":"40b0c980a50b6b04.json","type":"application/json","size":494}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Assert pet created successfully","time":{"start":1759063830661,"stop":1759063830661,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected 200, got 404\n","statusTrace":"  File \"/home/runner/work/python-testing-lab/python-testing-lab/helpers/assertion_helper.py\", line 11, in assert_pet_response_matches_expected\n    assert response.status_code == 200, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_pet::0","time":{"start":1759063830667,"stop":1759063830676,"duration":9},"status":"passed","steps":[{"name":"DELETE /api/v3/pet/503533","time":{"start":1759063830667,"stop":1759063830676,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"a64fdb07ace3440c","name":"Request","source":"a64fdb07ace3440c.json","type":"application/json","size":211},{"uid":"cf921ea839bee6d2","name":"Response","source":"cf921ea839bee6d2.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"story","value":"Update Pet"},{"name":"feature","value":"Pet API"},{"name":"tag","value":"pet_update"},{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_update_pet"},{"name":"subSuite","value":"TestUpdatePet"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2141-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_update_pet"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["pet_update"]},"source":"f5a08e7420c782c8.json","parameterValues":[]}