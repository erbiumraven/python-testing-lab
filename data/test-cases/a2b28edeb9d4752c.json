{"uid":"a2b28edeb9d4752c","name":"test_find_pets_multiple_status","fullName":"tests.api.test_pet_status.TestFindPetByStatus#test_find_pets_multiple_status","historyId":"4779a460b39667c551130be2940acb2e","time":{"start":1759062807553,"stop":1759062807559,"duration":6},"description":"Find pets by multiple valid statuses returns pets for each status.","descriptionHtml":"<p>Find pets by multiple valid statuses returns pets for each status.</p>\n","status":"failed","statusMessage":"AssertionError: Expected 200, got 400","statusTrace":"self = <test_pet_status.TestFindPetByStatus object at 0x7fa6e67e4d50>\nsession = <requests.sessions.Session object at 0x7fa6e661e290>\npet_status_url = 'https://petstore3.swagger.io/api/v3/pet/findByStatus'\nall_statuses_pets = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 809169, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...518561, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    @allure.description(\"Find pets by multiple valid statuses returns pets for each status.\")\n    def test_find_pets_multiple_status(self, session, pet_status_url, all_statuses_pets):\n        statuses = {pet[\"status\"] for pet in all_statuses_pets}\n        param = \",\".join(statuses)\n        url = f\"{pet_status_url}?status={param}\"\n        response = get_with_allure(session, url)\n>       assert_pets_status_success(response, statuses, all_statuses_pets)\n\ntests/api/test_pet_status.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, status_set = {'available', 'pending', 'sold'}\ntest_pet_list = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 809169, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...518561, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    def assert_pets_status_success(response, status_set, test_pet_list):\n        with (allure.step(f'Verify that pets with status in {status_set} (200)')):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           AssertionError: Expected 200, got 400\n\nhelpers/assertion_helper.py:82: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1759062807019,"stop":1759062807019,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1759062807019,"stop":1759062807019,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759062807019,"stop":1759062807020,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1759062807019,"stop":1759062807019,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session","time":{"start":1759062807020,"stop":1759062807020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_url","time":{"start":1759062807020,"stop":1759062807020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1759062807020,"stop":1759062807020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"allure_environment","time":{"start":1759062807020,"stop":1759062807020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_status_url","time":{"start":1759062807446,"stop":1759062807446,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"all_statuses_pets","time":{"start":1759062807533,"stop":1759062807553,"duration":20},"status":"passed","steps":[{"name":"POST /api/v3/pet","time":{"start":1759062807534,"stop":1759062807540,"duration":6},"status":"passed","steps":[],"attachments":[{"uid":"349dd5c37ca8a165","name":"Request","source":"349dd5c37ca8a165.json","type":"application/json","size":538},{"uid":"52dfba7ec0de9163","name":"Response","source":"52dfba7ec0de9163.json","type":"application/json","size":795}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"POST /api/v3/pet","time":{"start":1759062807540,"stop":1759062807546,"duration":6},"status":"passed","steps":[],"attachments":[{"uid":"1a008b69044b3b57","name":"Request","source":"1a008b69044b3b57.json","type":"application/json","size":536},{"uid":"f089265067f50167","name":"Response","source":"f089265067f50167.json","type":"application/json","size":793}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"POST /api/v3/pet","time":{"start":1759062807546,"stop":1759062807553,"duration":7},"status":"passed","steps":[],"attachments":[{"uid":"15d31c4ff608d19","name":"Request","source":"15d31c4ff608d19.json","type":"application/json","size":533},{"uid":"cfe2d8850cd02a31","name":"Response","source":"cfe2d8850cd02a31.json","type":"application/json","size":790}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Find pets by multiple valid statuses returns pets for each status.","status":"failed","statusMessage":"AssertionError: Expected 200, got 400","statusTrace":"self = <test_pet_status.TestFindPetByStatus object at 0x7fa6e67e4d50>\nsession = <requests.sessions.Session object at 0x7fa6e661e290>\npet_status_url = 'https://petstore3.swagger.io/api/v3/pet/findByStatus'\nall_statuses_pets = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 809169, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...518561, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    @allure.description(\"Find pets by multiple valid statuses returns pets for each status.\")\n    def test_find_pets_multiple_status(self, session, pet_status_url, all_statuses_pets):\n        statuses = {pet[\"status\"] for pet in all_statuses_pets}\n        param = \",\".join(statuses)\n        url = f\"{pet_status_url}?status={param}\"\n        response = get_with_allure(session, url)\n>       assert_pets_status_success(response, statuses, all_statuses_pets)\n\ntests/api/test_pet_status.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, status_set = {'available', 'pending', 'sold'}\ntest_pet_list = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 809169, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...518561, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    def assert_pets_status_success(response, status_set, test_pet_list):\n        with (allure.step(f'Verify that pets with status in {status_set} (200)')):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           AssertionError: Expected 200, got 400\n\nhelpers/assertion_helper.py:82: AssertionError","steps":[{"name":"GET /api/v3/pet/findByStatus","time":{"start":1759062807553,"stop":1759062807559,"duration":6},"status":"passed","steps":[],"attachments":[{"uid":"76380d79f22d2b16","name":"Request","source":"76380d79f22d2b16.json","type":"application/json","size":211},{"uid":"10bf50f5b436eeab","name":"Response","source":"10bf50f5b436eeab.json","type":"application/json","size":647}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Verify that pets with status in {'pending', 'available', 'sold'} (200)","time":{"start":1759062807559,"stop":1759062807559,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected 200, got 400\n","statusTrace":"  File \"/home/runner/work/python-testing-lab/python-testing-lab/helpers/assertion_helper.py\", line 82, in assert_pets_status_success\n    assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"all_statuses_pets::0","time":{"start":1759062808762,"stop":1759062808782,"duration":20},"status":"passed","steps":[{"name":"DELETE /api/v3/pet/809169","time":{"start":1759062808762,"stop":1759062808767,"duration":5},"status":"passed","steps":[],"attachments":[{"uid":"28fc2aeb48ddce38","name":"Request","source":"28fc2aeb48ddce38.json","type":"application/json","size":211},{"uid":"a49a1edd37e90fc7","name":"Response","source":"a49a1edd37e90fc7.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"DELETE /api/v3/pet/327453","time":{"start":1759062808768,"stop":1759062808774,"duration":6},"status":"passed","steps":[],"attachments":[{"uid":"b72273cd35c9368d","name":"Request","source":"b72273cd35c9368d.json","type":"application/json","size":211},{"uid":"4c87ca29222b1c73","name":"Response","source":"4c87ca29222b1c73.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"DELETE /api/v3/pet/518561","time":{"start":1759062808774,"stop":1759062808782,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"ea4a223115dcac4a","name":"Request","source":"ea4a223115dcac4a.json","type":"application/json","size":211},{"uid":"dc22ce3fd88b7583","name":"Response","source":"dc22ce3fd88b7583.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Pet API"},{"name":"story","value":"Get Pet by Status"},{"name":"tag","value":"pet_status"},{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_pet_status"},{"name":"subSuite","value":"TestFindPetByStatus"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2104-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_pet_status"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["pet_status"]},"source":"a2b28edeb9d4752c.json","parameterValues":[]}