{"uid":"339d1c18d11fa35e","name":"test_find_pets_multiple_status","fullName":"tests.api.test_pet_status.TestFindPetByStatus#test_find_pets_multiple_status","historyId":"4779a460b39667c551130be2940acb2e","time":{"start":1759063830479,"stop":1759063830488,"duration":9},"description":"Find pets by multiple valid statuses returns pets for each status.","descriptionHtml":"<p>Find pets by multiple valid statuses returns pets for each status.</p>\n","status":"failed","statusMessage":"AssertionError: Expected 200, got 400","statusTrace":"self = <test_pet_status.TestFindPetByStatus object at 0x7fb8e6edda90>\nsession = <requests.sessions.Session object at 0x7fb8e6d23210>\npet_status_url = 'https://petstore3.swagger.io/api/v3/pet/findByStatus'\nall_statuses_pets = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 748465, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...410629, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    @allure.description(\"Find pets by multiple valid statuses returns pets for each status.\")\n    def test_find_pets_multiple_status(self, session, pet_status_url, all_statuses_pets):\n        statuses = {pet[\"status\"] for pet in all_statuses_pets}\n        param = \",\".join(statuses)\n        url = f\"{pet_status_url}?status={param}\"\n        response = get_with_allure(session, url)\n>       assert_pets_status_success(response, statuses, all_statuses_pets)\n\ntests/api/test_pet_status.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, status_set = {'available', 'pending', 'sold'}\ntest_pet_list = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 748465, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...410629, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    def assert_pets_status_success(response, status_set, test_pet_list):\n        with (allure.step(f'Verify that pets with status in {status_set} (200)')):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           AssertionError: Expected 200, got 400\n\nhelpers/assertion_helper.py:82: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1759063829838,"stop":1759063829838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop_policy","time":{"start":1759063829838,"stop":1759063829838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759063829838,"stop":1759063829839,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1759063829838,"stop":1759063829838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1759063829839,"stop":1759063829839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_url","time":{"start":1759063829839,"stop":1759063829839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"allure_environment","time":{"start":1759063829839,"stop":1759063829839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session","time":{"start":1759063829839,"stop":1759063829839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_status_url","time":{"start":1759063830337,"stop":1759063830337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"all_statuses_pets","time":{"start":1759063830451,"stop":1759063830479,"duration":28},"status":"passed","steps":[{"name":"POST /api/v3/pet","time":{"start":1759063830451,"stop":1759063830460,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"2707df73969a60af","name":"Request","source":"2707df73969a60af.json","type":"application/json","size":538},{"uid":"81ae55aef2a0b19e","name":"Response","source":"81ae55aef2a0b19e.json","type":"application/json","size":795}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"POST /api/v3/pet","time":{"start":1759063830460,"stop":1759063830469,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"b8db302689f5684a","name":"Request","source":"b8db302689f5684a.json","type":"application/json","size":536},{"uid":"93201f9a5fd9559e","name":"Response","source":"93201f9a5fd9559e.json","type":"application/json","size":793}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"POST /api/v3/pet","time":{"start":1759063830469,"stop":1759063830479,"duration":10},"status":"passed","steps":[],"attachments":[{"uid":"ab445df7be9ebbba","name":"Request","source":"ab445df7be9ebbba.json","type":"application/json","size":533},{"uid":"6763c090cfbda14","name":"Response","source":"6763c090cfbda14.json","type":"application/json","size":790}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Find pets by multiple valid statuses returns pets for each status.","status":"failed","statusMessage":"AssertionError: Expected 200, got 400","statusTrace":"self = <test_pet_status.TestFindPetByStatus object at 0x7fb8e6edda90>\nsession = <requests.sessions.Session object at 0x7fb8e6d23210>\npet_status_url = 'https://petstore3.swagger.io/api/v3/pet/findByStatus'\nall_statuses_pets = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 748465, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...410629, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    @allure.description(\"Find pets by multiple valid statuses returns pets for each status.\")\n    def test_find_pets_multiple_status(self, session, pet_status_url, all_statuses_pets):\n        statuses = {pet[\"status\"] for pet in all_statuses_pets}\n        param = \",\".join(statuses)\n        url = f\"{pet_status_url}?status={param}\"\n        response = get_with_allure(session, url)\n>       assert_pets_status_success(response, statuses, all_statuses_pets)\n\ntests/api/test_pet_status.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, status_set = {'available', 'pending', 'sold'}\ntest_pet_list = [{'category': {'id': 1, 'name': 'Dogs'}, 'id': 748465, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pome...410629, 'name': 'Hardy', 'photoUrls': ['https://pixabay.com/photos/pomeranian-dog-puppy-mammal-animal-8096885/'], ...}]\n\n    def assert_pets_status_success(response, status_set, test_pet_list):\n        with (allure.step(f'Verify that pets with status in {status_set} (200)')):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           AssertionError: Expected 200, got 400\n\nhelpers/assertion_helper.py:82: AssertionError","steps":[{"name":"GET /api/v3/pet/findByStatus","time":{"start":1759063830479,"stop":1759063830488,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"cf97a5b344b7f9fc","name":"Request","source":"cf97a5b344b7f9fc.json","type":"application/json","size":211},{"uid":"63f2258b2138b2","name":"Response","source":"63f2258b2138b2.json","type":"application/json","size":647}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Verify that pets with status in {'available', 'sold', 'pending'} (200)","time":{"start":1759063830488,"stop":1759063830488,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected 200, got 400\n","statusTrace":"  File \"/home/runner/work/python-testing-lab/python-testing-lab/helpers/assertion_helper.py\", line 82, in assert_pets_status_success\n    assert response.status_code == 200, f\"Expected 200, got {response.status_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"all_statuses_pets::0","time":{"start":1759063832198,"stop":1759063832225,"duration":27},"status":"passed","steps":[{"name":"DELETE /api/v3/pet/748465","time":{"start":1759063832198,"stop":1759063832207,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"d0d0dea4cca8de7f","name":"Request","source":"d0d0dea4cca8de7f.json","type":"application/json","size":211},{"uid":"6b9a07eacf8042fe","name":"Response","source":"6b9a07eacf8042fe.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"DELETE /api/v3/pet/586577","time":{"start":1759063832207,"stop":1759063832216,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"1c66595c2dbb6c55","name":"Request","source":"1c66595c2dbb6c55.json","type":"application/json","size":211},{"uid":"c2483f4e80c7addd","name":"Response","source":"c2483f4e80c7addd.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"DELETE /api/v3/pet/410629","time":{"start":1759063832216,"stop":1759063832225,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"c56f9e15eff84f8d","name":"Request","source":"c56f9e15eff84f8d.json","type":"application/json","size":211},{"uid":"950921568850db50","name":"Response","source":"950921568850db50.json","type":"application/json","size":492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"story","value":"Get Pet by Status"},{"name":"feature","value":"Pet API"},{"name":"tag","value":"pet_status"},{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_pet_status"},{"name":"subSuite","value":"TestFindPetByStatus"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2141-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_pet_status"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["pet_status"]},"source":"339d1c18d11fa35e.json","parameterValues":[]}